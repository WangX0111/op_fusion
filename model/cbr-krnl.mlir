#map = affine_map<(d0) -> (d0)>
#map1 = affine_map<(d0) -> (d0 * 16)>
#map2 = affine_map<(d0, d1) -> (d0 * 16 + d1)>
#map3 = affine_map<(d0, d1) -> (d0 * 3)>
#map4 = affine_map<(d0) -> (d0 * 2)>
#map5 = affine_map<(d0) -> (d0 * -2 + 1)>
#map6 = affine_map<(d0) -> (d0 * -2 + 1, 0)>
#map7 = affine_map<(d0) -> (d0 * -2 + 13)>
#map8 = affine_map<(d0) -> (d0 * -2 + 13, 3)>
#map9 = affine_map<(d0, d1) -> (d1 * 2)>
#map10 = affine_map<(d0, d1) -> (d1 * -2 + 1)>
#map11 = affine_map<(d0, d1) -> (d1 * -2 + 1, 0)>
#map12 = affine_map<(d0, d1) -> (d1 * -2 + 13)>
#map13 = affine_map<(d0, d1) -> (d1 * -2 + 13, 3)>
#map14 = affine_map<(d0)[s0] -> (d0 + s0)>
#map15 = affine_map<(d0, d1)[s0, s1] -> (d1 - s1)>
#map16 = affine_map<(d0, d1, d2)[s0, s1, s2] -> (d2 - s2)>
#map17 = affine_map<(d0) -> (d0 * 32)>
#map18 = affine_map<(d0, d1) -> (d0 * 32 + d1)>
#map19 = affine_map<(d0, d1) -> (d0 * 16)>
#map20 = affine_map<(d0) -> (d0 * -2 + 7)>
#map21 = affine_map<(d0) -> (d0 * -2 + 7, 3)>
#map22 = affine_map<(d0, d1) -> (d1 * -2 + 7)>
#map23 = affine_map<(d0, d1) -> (d1 * -2 + 7, 3)>
module attributes {llvm.data_layout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128", llvm.target_triple = "x86_64-unknown-linux-gnu"} {
  func.func @main_graph(%arg0: memref<?x3x12x12xf32>) -> memref<?x32x3x3xf32> attributes {input_names = ["input"], output_names = ["output"]} {
    %0 = "krnl.global"() {name = "constant_0", shape = [16, 3, 3, 3], value = dense<"0xtensor<16x3x3x3xf32>} : () -> memref<16x3x3x3xf32>
    %1 = "krnl.global"() {name = "constant_1", shape = [16], value = dense<[0.173129767, -0.166705459, -0.140663907, -0.191498682, -0.0474105179, -0.0786130726, 0.0464374907, -0.175091252, -0.0470892899, -0.13934426, 0.15589343, -0.144915342, 0.0695649907, 0.134439379, 0.0844307691, -0.135046378]> : tensor<16xf32>} : () -> memref<16xf32>
    %2 = "krnl.global"() {name = "constant_2", shape = [32, 16, 3, 3], value = dense<"tensor<32x16x3x3xf32>} : () -> memref<32x16x3x3xf32>
    %3 = "krnl.global"() {name = "constant_3", shape = [32], value = dense<[-0.0386761092, 0.0446468666, -0.0355843604, 0.0290286783, -0.0478844345, -0.0490023121, 0.0210491158, -0.0233633239, 0.0693316534, -0.0712310597, 0.0600212179, 0.0120764961, 0.0513812937, 0.0247947127, 0.0399321504, 0.0149124218, 0.0280254278, 0.0669608042, 0.0074705407, -4.354800e-02, -0.0373291299, -0.0335916616, -0.0304098502, -0.0757252648, -0.0145248249, -0.0230194665, 0.0622831545, 6.762220e-02, 0.0154365124, -0.0280950051, -0.018469112, -0.0590913929]> : tensor<32xf32>} : () -> memref<32xf32>
    %c3 = arith.constant 3 : index
    %c3_0 = arith.constant 3 : index
    %c1 = arith.constant 1 : index
    %c1_1 = arith.constant 1 : index
    %c1_2 = arith.constant 1 : index
    %c1_3 = arith.constant 1 : index
    %c0 = arith.constant 0 : index
    %dim = memref.dim %arg0, %c0 : memref<?x3x12x12xf32>
    %c16 = arith.constant 16 : index
    %c0_4 = arith.constant 0 : index
    %c1_5 = arith.constant 1 : index
    %c12 = arith.constant 12 : index
    %c1_6 = arith.constant 1 : index
    %c2 = arith.constant 2 : index
    %c2_7 = arith.constant 2 : index
    %c3_8 = arith.constant 3 : index
    %c2_9 = arith.constant 2 : index
    %c14 = arith.constant 14 : index
    %c11 = arith.constant 11 : index
    %c5 = arith.constant 5 : index
    %c6 = arith.constant 6 : index
    %c12_10 = arith.constant 12 : index
    %c1_11 = arith.constant 1 : index
    %c2_12 = arith.constant 2 : index
    %c2_13 = arith.constant 2 : index
    %c3_14 = arith.constant 3 : index
    %c2_15 = arith.constant 2 : index
    %c14_16 = arith.constant 14 : index
    %c11_17 = arith.constant 11 : index
    %c5_18 = arith.constant 5 : index
    %c6_19 = arith.constant 6 : index
    %alloc = memref.alloc(%dim) {alignment = 16 : i64} : memref<?x16x6x6xf32>
    %c1_20 = arith.constant 1 : index
    %cst = arith.constant 0.000000e+00 : f32
    %c3_21 = arith.constant 3 : index
    %c0_22 = arith.constant 0 : index
    %c1_23 = arith.constant 1 : index
    %alloca = memref.alloca() : memref<f32>
    %4:3 = krnl.define_loops 3
    krnl.iterate(%4#0, %4#1, %4#2) with (%4#0 -> %arg1 = 0 to #map(%dim), %4#1 -> %arg2 = 0 to 1, %4#2 -> %arg3 = 0 to 16){
      %8:3 = krnl.get_induction_var_value(%4#0, %4#1, %4#2) : (!krnl.loop, !krnl.loop, !krnl.loop) -> (index, index, index)
      %c16_79 = arith.constant 16 : index
      %9 = affine.apply #map1(%8#1)
      %10 = affine.apply #map2(%8#1, %8#2)
      %c3_80 = arith.constant 3 : index
      %11 = affine.apply #map3(%8#1, %8#2)
      %12:2 = krnl.define_loops 2
      %c6_81 = arith.constant 6 : index
      %c6_82 = arith.constant 6 : index
      krnl.iterate(%12#0, %12#1) with (%12#0 -> %arg4 = 0 to 6, %12#1 -> %arg5 = 0 to 6){
        %13:2 = krnl.get_induction_var_value(%12#0, %12#1) : (!krnl.loop, !krnl.loop) -> (index, index)
        krnl.store %cst, %alloca[] : memref<f32>
        %14:3 = krnl.define_loops 3
        %c3_83 = arith.constant 3 : index
        %c12_84 = arith.constant 12 : index
        %c12_85 = arith.constant 12 : index
        %c3_86 = arith.constant 3 : index
        %c3_87 = arith.constant 3 : index
        %c1_88 = arith.constant 1 : index
        %c2_89 = arith.constant 2 : index
        %c1_90 = arith.constant 1 : index
        %15 = affine.apply #map4(%13#0)
        %16 = affine.apply #map5(%13#0)
        %c0_91 = arith.constant 0 : index
        %17 = affine.max #map6(%13#0)
        %18 = affine.apply #map7(%13#0)
        %19 = affine.min #map8(%13#0)
        %c12_92 = arith.constant 12 : index
        %c12_93 = arith.constant 12 : index
        %c3_94 = arith.constant 3 : index
        %c3_95 = arith.constant 3 : index
        %c1_96 = arith.constant 1 : index
        %c2_97 = arith.constant 2 : index
        %c1_98 = arith.constant 1 : index
        %20 = affine.apply #map9(%13#0, %13#1)
        %21 = affine.apply #map10(%13#0, %13#1)
        %c0_99 = arith.constant 0 : index
        %22 = affine.max #map11(%13#0, %13#1)
        %23 = affine.apply #map12(%13#0, %13#1)
        %24 = affine.min #map13(%13#0, %13#1)
        krnl.iterate(%14#0, %14#1, %14#2) with (%14#0 -> %arg6 = 0 to 3, %14#1 -> %arg7 = max #map6(%13#0) to min #map8(%13#0), %14#2 -> %arg8 = max #map11(%13#0, %13#1) to min #map13(%13#0, %13#1)){
          %28:3 = krnl.get_induction_var_value(%14#0, %14#1, %14#2) : (!krnl.loop, !krnl.loop, !krnl.loop) -> (index, index, index)
          %29 = affine.apply #map14(%28#0)[%11]
          %c1_100 = arith.constant 1 : index
          %30 = affine.apply #map15(%28#0, %28#1)[%11, %16]
          %c1_101 = arith.constant 1 : index
          %31 = affine.apply #map16(%28#0, %28#1, %28#2)[%11, %16, %21]
          %32 = krnl.load %arg0[%8#0, %29, %30, %31] : memref<?x3x12x12xf32>
          %33 = krnl.load %0[%10, %28#0, %28#1, %28#2] : memref<16x3x3x3xf32>
          %34 = krnl.load %alloca[] : memref<f32>
          %35 = arith.mulf %32, %33 : f32
          %36 = arith.addf %34, %35 : f32
          krnl.store %36, %alloca[] : memref<f32>
        }
        %25 = krnl.load %alloca[] : memref<f32>
        %26 = krnl.load %1[%10] : memref<16xf32>
        %27 = arith.addf %25, %26 : f32
        krnl.store %27, %alloc[%8#0, %10, %13#0, %13#1] : memref<?x16x6x6xf32>
      }
    }
    %c0_24 = arith.constant 0 : index
    %c16_25 = arith.constant 16 : index
    %c6_26 = arith.constant 6 : index
    %c6_27 = arith.constant 6 : index
    %alloc_28 = memref.alloc(%dim) {alignment = 16 : i64} : memref<?x16x6x6xf32>
    %5:4 = krnl.define_loops 4
    %c0_29 = arith.constant 0 : index
    %c0_30 = arith.constant 0 : index
    %c16_31 = arith.constant 16 : index
    %c6_32 = arith.constant 6 : index
    %c6_33 = arith.constant 6 : index
    krnl.iterate(%5#0, %5#1, %5#2, %5#3) with (%5#0 -> %arg1 = 0 to #map(%dim), %5#1 -> %arg2 = 0 to 16, %5#2 -> %arg3 = 0 to 6, %5#3 -> %arg4 = 0 to 6){
      %8:4 = krnl.get_induction_var_value(%5#0, %5#1, %5#2, %5#3) : (!krnl.loop, !krnl.loop, !krnl.loop, !krnl.loop) -> (index, index, index, index)
      %9 = krnl.load %alloc[%8#0, %8#1, %8#2, %8#3] : memref<?x16x6x6xf32>
      %cst_79 = arith.constant 0.000000e+00 : f32
      %10 = arith.cmpf oge, %9, %cst_79 : f32
      %11 = arith.select %10, %9, %cst_79 : f32
      krnl.store %11, %alloc_28[%8#0, %8#1, %8#2, %8#3] : memref<?x16x6x6xf32>
    }
    %c3_34 = arith.constant 3 : index
    %c3_35 = arith.constant 3 : index
    %c1_36 = arith.constant 1 : index
    %c1_37 = arith.constant 1 : index
    %c1_38 = arith.constant 1 : index
    %c1_39 = arith.constant 1 : index
    %c0_40 = arith.constant 0 : index
    %c32 = arith.constant 32 : index
    %c0_41 = arith.constant 0 : index
    %c1_42 = arith.constant 1 : index
    %c6_43 = arith.constant 6 : index
    %c1_44 = arith.constant 1 : index
    %c2_45 = arith.constant 2 : index
    %c2_46 = arith.constant 2 : index
    %c3_47 = arith.constant 3 : index
    %c2_48 = arith.constant 2 : index
    %c8 = arith.constant 8 : index
    %c5_49 = arith.constant 5 : index
    %c2_50 = arith.constant 2 : index
    %c3_51 = arith.constant 3 : index
    %c6_52 = arith.constant 6 : index
    %c1_53 = arith.constant 1 : index
    %c2_54 = arith.constant 2 : index
    %c2_55 = arith.constant 2 : index
    %c3_56 = arith.constant 3 : index
    %c2_57 = arith.constant 2 : index
    %c8_58 = arith.constant 8 : index
    %c5_59 = arith.constant 5 : index
    %c2_60 = arith.constant 2 : index
    %c3_61 = arith.constant 3 : index
    %alloc_62 = memref.alloc(%dim) {alignment = 16 : i64} : memref<?x32x3x3xf32>
    %c1_63 = arith.constant 1 : index
    %cst_64 = arith.constant 0.000000e+00 : f32
    %c16_65 = arith.constant 16 : index
    %c0_66 = arith.constant 0 : index
    %c1_67 = arith.constant 1 : index
    %alloca_68 = memref.alloca() : memref<f32>
    %6:3 = krnl.define_loops 3
    krnl.iterate(%6#0, %6#1, %6#2) with (%6#0 -> %arg1 = 0 to #map(%dim), %6#1 -> %arg2 = 0 to 1, %6#2 -> %arg3 = 0 to 32){
      %8:3 = krnl.get_induction_var_value(%6#0, %6#1, %6#2) : (!krnl.loop, !krnl.loop, !krnl.loop) -> (index, index, index)
      %c32_79 = arith.constant 32 : index
      %9 = affine.apply #map17(%8#1)
      %10 = affine.apply #map18(%8#1, %8#2)
      %c16_80 = arith.constant 16 : index
      %11 = affine.apply #map19(%8#1, %8#2)
      %12:2 = krnl.define_loops 2
      %c3_81 = arith.constant 3 : index
      %c3_82 = arith.constant 3 : index
      krnl.iterate(%12#0, %12#1) with (%12#0 -> %arg4 = 0 to 3, %12#1 -> %arg5 = 0 to 3){
        %13:2 = krnl.get_induction_var_value(%12#0, %12#1) : (!krnl.loop, !krnl.loop) -> (index, index)
        krnl.store %cst_64, %alloca_68[] : memref<f32>
        %14:3 = krnl.define_loops 3
        %c16_83 = arith.constant 16 : index
        %c6_84 = arith.constant 6 : index
        %c6_85 = arith.constant 6 : index
        %c3_86 = arith.constant 3 : index
        %c3_87 = arith.constant 3 : index
        %c1_88 = arith.constant 1 : index
        %c2_89 = arith.constant 2 : index
        %c1_90 = arith.constant 1 : index
        %15 = affine.apply #map4(%13#0)
        %16 = affine.apply #map5(%13#0)
        %c0_91 = arith.constant 0 : index
        %17 = affine.max #map6(%13#0)
        %18 = affine.apply #map20(%13#0)
        %19 = affine.min #map21(%13#0)
        %c6_92 = arith.constant 6 : index
        %c6_93 = arith.constant 6 : index
        %c3_94 = arith.constant 3 : index
        %c3_95 = arith.constant 3 : index
        %c1_96 = arith.constant 1 : index
        %c2_97 = arith.constant 2 : index
        %c1_98 = arith.constant 1 : index
        %20 = affine.apply #map9(%13#0, %13#1)
        %21 = affine.apply #map10(%13#0, %13#1)
        %c0_99 = arith.constant 0 : index
        %22 = affine.max #map11(%13#0, %13#1)
        %23 = affine.apply #map22(%13#0, %13#1)
        %24 = affine.min #map23(%13#0, %13#1)
        krnl.iterate(%14#0, %14#1, %14#2) with (%14#0 -> %arg6 = 0 to 16, %14#1 -> %arg7 = max #map6(%13#0) to min #map21(%13#0), %14#2 -> %arg8 = max #map11(%13#0, %13#1) to min #map23(%13#0, %13#1)){
          %28:3 = krnl.get_induction_var_value(%14#0, %14#1, %14#2) : (!krnl.loop, !krnl.loop, !krnl.loop) -> (index, index, index)
          %29 = affine.apply #map14(%28#0)[%11]
          %c1_100 = arith.constant 1 : index
          %30 = affine.apply #map15(%28#0, %28#1)[%11, %16]
          %c1_101 = arith.constant 1 : index
          %31 = affine.apply #map16(%28#0, %28#1, %28#2)[%11, %16, %21]
          %32 = krnl.load %alloc_28[%8#0, %29, %30, %31] : memref<?x16x6x6xf32>
          %33 = krnl.load %2[%10, %28#0, %28#1, %28#2] : memref<32x16x3x3xf32>
          %34 = krnl.load %alloca_68[] : memref<f32>
          %35 = arith.mulf %32, %33 : f32
          %36 = arith.addf %34, %35 : f32
          krnl.store %36, %alloca_68[] : memref<f32>
        }
        %25 = krnl.load %alloca_68[] : memref<f32>
        %26 = krnl.load %3[%10] : memref<32xf32>
        %27 = arith.addf %25, %26 : f32
        krnl.store %27, %alloc_62[%8#0, %10, %13#0, %13#1] : memref<?x32x3x3xf32>
      }
    }
    %c0_69 = arith.constant 0 : index
    %c32_70 = arith.constant 32 : index
    %c3_71 = arith.constant 3 : index
    %c3_72 = arith.constant 3 : index
    %alloc_73 = memref.alloc(%dim) {alignment = 16 : i64} : memref<?x32x3x3xf32>
    %7:4 = krnl.define_loops 4
    %c0_74 = arith.constant 0 : index
    %c0_75 = arith.constant 0 : index
    %c32_76 = arith.constant 32 : index
    %c3_77 = arith.constant 3 : index
    %c3_78 = arith.constant 3 : index
    krnl.iterate(%7#0, %7#1, %7#2, %7#3) with (%7#0 -> %arg1 = 0 to #map(%dim), %7#1 -> %arg2 = 0 to 32, %7#2 -> %arg3 = 0 to 3, %7#3 -> %arg4 = 0 to 3){
      %8:4 = krnl.get_induction_var_value(%7#0, %7#1, %7#2, %7#3) : (!krnl.loop, !krnl.loop, !krnl.loop, !krnl.loop) -> (index, index, index, index)
      %9 = krnl.load %alloc_62[%8#0, %8#1, %8#2, %8#3] : memref<?x32x3x3xf32>
      %cst_79 = arith.constant 0.000000e+00 : f32
      %10 = arith.cmpf oge, %9, %cst_79 : f32
      %11 = arith.select %10, %9, %cst_79 : f32
      krnl.store %11, %alloc_73[%8#0, %8#1, %8#2, %8#3] : memref<?x32x3x3xf32>
    }
    return %alloc_73 : memref<?x32x3x3xf32>
  }
  "krnl.entry_point"() {func = @main_graph, numInputs = 1 : i32, numOutputs = 1 : i32, signature = "[    { \22type\22 : \22f32\22 , \22dims\22 : [-1 , 3 , 12 , 12] , \22name\22 : \22input\22 }\0A\0A]\00@[   { \22type\22 : \22f32\22 , \22dims\22 : [-1 , 32 , 3 , 3] , \22name\22 : \22output\22 }\0A\0A]\00"} : () -> ()
}

